/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package az.orient.hospital.gui;

import az.orient.hospital.model.Users;
import az.orient.hospital.service.HospitalService;
import az.orient.hospital.service.HospitalServiceAdmin;
import java.awt.Toolkit;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author EAAbduyev
 */
public class RegisterFrame extends javax.swing.JFrame {

    /**
     * Creates new form RegisterFrame
     */
    private HospitalService hService;
    private HospitalServiceAdmin hServiceAdmin;
    private Users user;
    
    public RegisterFrame() {
        initComponents();
    }
    
    public RegisterFrame(HospitalService hService) {
        initComponents();
        setIcon();
        registerBtn.setEnabled(false);
        this.hService = hService;
        adminCodeTxt.setToolTipText("For user role no need to fill admin code");
        adminCodeTxt.disable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        adminCodeLbl = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        registerBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        nameTxt = new javax.swing.JTextField();
        surnameTxt = new javax.swing.JTextField();
        unTxt = new javax.swing.JTextField();
        emailTxt = new javax.swing.JTextField();
        passTxt = new javax.swing.JPasswordField();
        confirmPassTxt = new javax.swing.JPasswordField();
        roleCmbBox = new javax.swing.JComboBox<>();
        adminCodeTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        genderCmbBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Register Form");

        jLabel1.setText("Name:");

        jLabel2.setText("Surname:");

        jLabel3.setText("UserName:");

        jLabel4.setText("Email:");

        jLabel5.setText("Password:");

        jLabel6.setText("Confirm Password:");

        adminCodeLbl.setText("Admin Code:");

        jLabel8.setText("Role:");

        registerBtn.setIcon(new javax.swing.ImageIcon("C:\\Users\\ASUS\\Documents\\NetBeansProjects\\img\\register.png")); // NOI18N
        registerBtn.setText("Register");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        cancelBtn.setIcon(new javax.swing.ImageIcon("C:\\Users\\ASUS\\Documents\\NetBeansProjects\\img\\cancel.png")); // NOI18N
        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        unTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                unTxtFocusLost(evt);
            }
        });

        emailTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailTxtFocusLost(evt);
            }
        });

        confirmPassTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                confirmPassTxtFocusLost(evt);
            }
        });

        roleCmbBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Role", "user", "admin" }));
        roleCmbBox.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                roleCmbBoxMouseDragged(evt);
            }
        });
        roleCmbBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                none(evt);
            }
        });
        roleCmbBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roleCmbBoxMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                roleCmbBoxMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                roleCmbBoxMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                roleCmbBoxMouseReleased(evt);
            }
        });
        roleCmbBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleCmbBoxActionPerformed(evt);
            }
        });
        roleCmbBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                roleCmbBoxKeyReleased(evt);
            }
        });

        adminCodeTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                adminCodeTxtFocusLost(evt);
            }
        });
        adminCodeTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                adminCodeTxtMouseReleased(evt);
            }
        });

        jLabel7.setText("Gender:");

        genderCmbBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Gender", "male", "female", "not specified" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(nameTxt)
                            .addComponent(surnameTxt)
                            .addComponent(unTxt)
                            .addComponent(emailTxt)
                            .addComponent(passTxt)
                            .addComponent(confirmPassTxt)
                            .addComponent(roleCmbBox, 0, 247, Short.MAX_VALUE)
                            .addComponent(genderCmbBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(registerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                        .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(adminCodeLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(adminCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(surnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(unTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(genderCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(emailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(passTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(confirmPassTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminCodeLbl)
                    .addComponent(adminCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerBtn)
                    .addComponent(cancelBtn))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        this.dispose();
        LoginFrame loginFrame = new LoginFrame(hService, hServiceAdmin);
        loginFrame.setVisible(true);
        loginFrame.setResizable(false);
        loginFrame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void roleCmbBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleCmbBoxActionPerformed
        if(roleCmbBox.getSelectedItem().equals("user")) {
            adminCodeTxt.setText("");
            adminCodeTxt.disable();
            registerBtn.setEnabled(true);
        }
        else {
            adminCodeTxt.enable();
            registerBtn.setEnabled(false);
        }
    }//GEN-LAST:event_roleCmbBoxActionPerformed

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        try {
            addUsersList(user);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_registerBtnActionPerformed

    private void confirmPassTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_confirmPassTxtFocusLost
        if(!(passTxt.getText().equals(confirmPassTxt.getText()))) {
            JOptionPane.showMessageDialog(null, "Passwords are not matching!", "Warning", JOptionPane.OK_OPTION);
            confirmPassTxt.requestFocus();
        }        
    }//GEN-LAST:event_confirmPassTxtFocusLost

    private void unTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_unTxtFocusLost
        try {
            List<Users> userList = hService.getUsersList();
            
            for(Users u: userList) {
                if(unTxt.getText().equals(u.getUsername())) {
                    JOptionPane.showMessageDialog(null, "This username is already exist! Please, choose new", "Warning", JOptionPane.OK_OPTION);
                    unTxt.requestFocus();
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_unTxtFocusLost

    private void emailTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTxtFocusLost
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\."+
                            "[a-zA-Z0-9_+&*-]+)*@" +
                            "(?:[a-zA-Z0-9-]+\\.)+[a-z" +
                            "A-Z]{2,7}$";
        Pattern pat = Pattern.compile(emailRegex);
        if(!(pat.matcher(emailTxt.getText()).matches()) || (emailTxt.getText() == null)) {
            JOptionPane.showMessageDialog(null, "Please use correct email format!", "Warning", JOptionPane.OK_OPTION);
            emailTxt.requestFocus();
        }
    }//GEN-LAST:event_emailTxtFocusLost

    private void none(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_none
      
    }//GEN-LAST:event_none

    private void roleCmbBoxMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roleCmbBoxMouseReleased
        
    }//GEN-LAST:event_roleCmbBoxMouseReleased

    private void roleCmbBoxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roleCmbBoxMousePressed
        
    }//GEN-LAST:event_roleCmbBoxMousePressed

    private void roleCmbBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roleCmbBoxMouseClicked
        
    }//GEN-LAST:event_roleCmbBoxMouseClicked

    private void roleCmbBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roleCmbBoxKeyReleased
        
    }//GEN-LAST:event_roleCmbBoxKeyReleased

    private void roleCmbBoxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roleCmbBoxMouseExited
        
    }//GEN-LAST:event_roleCmbBoxMouseExited

    private void roleCmbBoxMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roleCmbBoxMouseDragged
        
    }//GEN-LAST:event_roleCmbBoxMouseDragged

    private void adminCodeTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_adminCodeTxtFocusLost
        if(roleCmbBox.getSelectedItem().equals("admin") && Integer.parseInt(adminCodeTxt.getText()) == 112233) {
            registerBtn.setEnabled(true);
        } else if(roleCmbBox.getSelectedItem().equals("admin") && Integer.parseInt(adminCodeTxt.getText()) != 112233) {
            JOptionPane.showMessageDialog(null, "Please use correct code, otherwise register as an user!", "Warning", JOptionPane.OK_OPTION);
            registerBtn.setEnabled(false);     
            roleCmbBox.requestFocus();
        } else if(roleCmbBox.getSelectedItem().equals("user")) {
            registerBtn.setEnabled(true);
        }
    }//GEN-LAST:event_adminCodeTxtFocusLost

    private void adminCodeTxtMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminCodeTxtMouseReleased
       
    }//GEN-LAST:event_adminCodeTxtMouseReleased

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adminCodeLbl;
    private javax.swing.JTextField adminCodeTxt;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JPasswordField confirmPassTxt;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JComboBox<String> genderCmbBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JPasswordField passTxt;
    private javax.swing.JButton registerBtn;
    private javax.swing.JComboBox<String> roleCmbBox;
    private javax.swing.JTextField surnameTxt;
    private javax.swing.JTextField unTxt;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("register.gif")));
    }
    
    private void addUsersList(Users user) throws Exception {
        Users us = new Users();
        
        us.setName(nameTxt.getText().substring(0,1).toUpperCase() + nameTxt.getText().substring(1));        
        us.setSurname(surnameTxt.getText().substring(0,1).toUpperCase() + surnameTxt.getText().substring(1));
        us.setGender((String)genderCmbBox.getSelectedItem());
        us.setUsername(unTxt.getText());
        us.setEmail(emailTxt.getText());
        us.setPassword(passTxt.getText());
        us.setConfirm_password(confirmPassTxt.getText());
        us.setRole((String)roleCmbBox.getSelectedItem());
        
        /*if(roleCmbBox.getSelectedItem().equals("admin") && Integer.parseInt(adminCodeTxt.getText()) == 112233) {
            registerBtn.setEnabled(true);
            us.setIsAdmin(112233);
        } else if(roleCmbBox.getSelectedItem().equals("admin") && Integer.parseInt(adminCodeTxt.getText()) != 112233) {
            JOptionPane.showMessageDialog(null, "Please use correct code, otherwise register as an user!", "Warning", JOptionPane.OK_OPTION);
            registerBtn.setEnabled(false);     
            roleCmbBox.requestFocus();
        } else if(roleCmbBox.getSelectedItem().equals("user")) {
            registerBtn.setEnabled(true);
            us.setIsAdmin(0);
        }*/
        
        if(roleCmbBox.getSelectedItem().equals("admin")) {
            us.setIsAdmin(112233);
        } else {
            us.setIsAdmin(0);
        }

        boolean isAdded = hService.addUsers(us);
        if(isAdded) {
            LoginFrame loginFrame = new LoginFrame(hService, hServiceAdmin);
            loginFrame.setVisible(true);
            loginFrame.setResizable(false);
            loginFrame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Problem! Cannot be added!", "Error", JOptionPane.ERROR_MESSAGE);
        }
         
    }
}
